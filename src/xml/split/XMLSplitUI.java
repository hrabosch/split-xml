package xml.split;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Optional;
import static java.util.Optional.ofNullable;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author hrabosch
 */
public class XMLSplitUI extends javax.swing.JFrame {

    private XMLFile xmlFile;

    /**
     * Creates new form XMLSplitUI
     */
    public XMLSplitUI() {
        initComponents();
        fileSummaryPanel.setVisible(false);
        UIManager.put("Label.font", new java.awt.Font("Carlito", 1, 18));
        docStructureTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        File propertiesFile = new File("resources/split-xml.properties");
        FileReader reader;
        try {
            reader = new FileReader(propertiesFile);
            Properties properties = new Properties();
            properties.load(reader);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(XMLSplitUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(XMLSplitUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoTextLabel = new javax.swing.JLabel();
        fileSummaryPanel = new javax.swing.JPanel();
        structureScrollPanel = new javax.swing.JScrollPane();
        docStructureTree = new javax.swing.JTree();
        spliParamsLabel = new javax.swing.JLabel();
        basedOnLabel = new javax.swing.JLabel();
        basedOnDropdown = new javax.swing.JComboBox<>();
        byValueLabel = new javax.swing.JLabel();
        byValueTextField = new javax.swing.JTextField();
        selectRootBtn = new javax.swing.JButton();
        selectItemBtn = new javax.swing.JButton();
        rootElementLabel = new javax.swing.JLabel();
        itemElementLabel = new javax.swing.JLabel();
        selectedRootElementLabel = new javax.swing.JLabel();
        selectedItemElementLabel = new javax.swing.JLabel();
        splitButton = new javax.swing.JButton();
        outPutLabel = new javax.swing.JLabel();
        outPutPathTextField = new javax.swing.JTextField();
        setOutPutLocationBtn = new javax.swing.JButton();
        rootElementRenameBtn = new javax.swing.JButton();
        itemElementRenameBtn = new javax.swing.JButton();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("XML Split");
        setResizable(false);

        infoTextLabel.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        infoTextLabel.setForeground(new java.awt.Color(102, 102, 102));
        infoTextLabel.setText("Open file by menu File -> Open (CTRL+O)");

        fileSummaryPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        structureScrollPanel.setViewportView(docStructureTree);

        spliParamsLabel.setFont(new java.awt.Font("Carlito", 1, 18)); // NOI18N
        spliParamsLabel.setForeground(new java.awt.Color(102, 102, 102));
        spliParamsLabel.setText("Split parameters");

        basedOnLabel.setText("Based on:");

        basedOnDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Items per file" }));

        byValueLabel.setText("By value:");

        selectRootBtn.setText("Select as root");
        selectRootBtn.setMaximumSize(new java.awt.Dimension(155, 27));
        selectRootBtn.setMinimumSize(new java.awt.Dimension(155, 27));
        selectRootBtn.setPreferredSize(new java.awt.Dimension(155, 27));
        selectRootBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRootBtnActionPerformed(evt);
            }
        });

        selectItemBtn.setText("Select as item");
        selectItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectItemBtnActionPerformed(evt);
            }
        });

        rootElementLabel.setText("Root element:");

        itemElementLabel.setText("Item element:");

        selectedRootElementLabel.setFont(new java.awt.Font("Carlito", 1, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("resources/split-xml"); // NOI18N
        selectedRootElementLabel.setText(bundle.getString("label.not.selected")); // NOI18N

        selectedItemElementLabel.setFont(new java.awt.Font("Carlito", 1, 12)); // NOI18N
        selectedItemElementLabel.setText(bundle.getString("label.not.selected")); // NOI18N

        splitButton.setText("Split it!");
        splitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitButtonActionPerformed(evt);
            }
        });

        outPutLabel.setText("Output:");

        outPutPathTextField.setEditable(false);

        setOutPutLocationBtn.setText("Set output location");
        setOutPutLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setOutPutLocationBtnActionPerformed(evt);
            }
        });

        rootElementRenameBtn.setText("Rename");
        rootElementRenameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootElementRenameBtnActionPerformed(evt);
            }
        });

        itemElementRenameBtn.setText("Rename");
        itemElementRenameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemElementRenameBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fileSummaryPanelLayout = new javax.swing.GroupLayout(fileSummaryPanel);
        fileSummaryPanel.setLayout(fileSummaryPanelLayout);
        fileSummaryPanelLayout.setHorizontalGroup(
            fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                        .addComponent(selectRootBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectItemBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(structureScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(splitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                        .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spliParamsLabel)
                            .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(basedOnLabel)
                                    .addComponent(byValueLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(basedOnDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(byValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(itemElementLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rootElementLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(selectedRootElementLabel))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fileSummaryPanelLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(selectedItemElementLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rootElementRenameBtn)
                                    .addComponent(itemElementRenameBtn)))
                            .addComponent(outPutLabel)
                            .addComponent(outPutPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setOutPutLocationBtn))
                        .addGap(0, 59, Short.MAX_VALUE)))
                .addContainerGap())
        );
        fileSummaryPanelLayout.setVerticalGroup(
            fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fileSummaryPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(spliParamsLabel)
                        .addGap(27, 27, 27)
                        .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(basedOnLabel)
                            .addComponent(basedOnDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(byValueLabel)
                            .addComponent(byValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rootElementLabel)
                            .addComponent(selectedRootElementLabel)
                            .addComponent(rootElementRenameBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemElementLabel)
                            .addComponent(selectedItemElementLabel)
                            .addComponent(itemElementRenameBtn))
                        .addGap(58, 58, 58)
                        .addComponent(outPutLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outPutPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setOutPutLocationBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(splitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(structureScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fileSummaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectRootBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectItemBtn))
                .addGap(14, 14, 14))
        );

        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mainMenuBar.add(fileMenu);

        helpMenu.setText("Help");
        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fileSummaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addComponent(infoTextLabel)
                    .addContainerGap(287, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fileSummaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(284, 284, 284)
                    .addComponent(infoTextLabel)
                    .addContainerGap(270, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser fileopen = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("XML Files", "xml");
        fileopen.setFileFilter(filter);
        fileopen.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int ret = fileopen.showDialog(null, "Open file");

        if (ret == JFileChooser.APPROVE_OPTION) {
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            try {
                File uploadedFile = fileopen.getSelectedFile();
                xmlFile = new XMLFile(dbf.newDocumentBuilder().parse(uploadedFile));
                String absolutePath = uploadedFile.getAbsolutePath();
                outPutPathTextField.setText(absolutePath.substring(0, absolutePath.lastIndexOf(File.separator)));
                docStructureTree.setModel(xmlFile.getTreeModel());
                if (!fileSummaryPanel.isVisible()) {
                    showFileSummary();
                }
            } catch (ParserConfigurationException | SAXException | IOException ex) {
                Logger.getLogger(XMLSplitUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void selectRootBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRootBtnActionPerformed
        Optional<TreePath> selectedNode;
        selectedNode = ofNullable(
                docStructureTree.getSelectionPath());
        if (selectedNode.isPresent()) {
            String value = ((DefaultMutableTreeNode) selectedNode.get().getLastPathComponent()).toString();
            xmlFile.setRootValue(value);
            selectedRootElementLabel.setText(value);
        } else {
            JOptionPane.showMessageDialog(fileSummaryPanel, Messages.ROOT_ELEMENT_IS_NOT_SELECTED.getDescription(),
                    Messages.ROOT_ELEMENT_IS_NOT_SELECTED.getTitle(), JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_selectRootBtnActionPerformed

    private void selectItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectItemBtnActionPerformed
        Optional<TreePath> selectedNode;
        selectedNode = ofNullable(
                docStructureTree.getSelectionPath());
        if (selectedNode.isPresent()) {
            String value = ((DefaultMutableTreeNode) selectedNode.get().getLastPathComponent()).toString();
            xmlFile.setItemValue(value);
            selectedItemElementLabel.setText(value);
        } else {
            JOptionPane.showMessageDialog(rootPane, Messages.ITEM_ELEMENT_IS_NOT_SELECTED.getDescription(),
                    Messages.ITEM_ELEMENT_IS_NOT_SELECTED.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_selectItemBtnActionPerformed

    private void splitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitButtonActionPerformed
        if (outPutPathTextField.getText().length() > 0 && byValueTextField.getText().matches("[0-9]+") && byValueTextField.getText().length() > 0 && xmlFile.validateIt()) {
            try {
                int finished = xmlFile.splitFile(outPutPathTextField.getText(), Integer.parseInt(byValueTextField.getText()));
                JOptionPane.showMessageDialog(rootPane, Messages.SPLIT_FINISHED.formatMessage(finished),
                        Messages.SPLIT_FINISHED.getTitle(), JOptionPane.INFORMATION_MESSAGE);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(XMLSplitUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(XMLSplitUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, Messages.MISSING_CONFIGURATION.getDescription(),
                    Messages.MISSING_CONFIGURATION.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_splitButtonActionPerformed

    private void setOutPutLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setOutPutLocationBtnActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new java.io.File(outPutPathTextField.getText()));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            outPutPathTextField.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_setOutPutLocationBtnActionPerformed

    private void rootElementRenameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootElementRenameBtnActionPerformed
        if (rootElementLabel.getText().equals(java.util.ResourceBundle.getBundle("resources/split-xml").getString("label.not.selected"))) {
            JOptionPane.showMessageDialog(rootPane, Messages.ROOT_ELEMENT_IS_NOT_SELECTED.getDescription(),
                    Messages.ROOT_ELEMENT_IS_NOT_SELECTED.getTitle(), JOptionPane.ERROR_MESSAGE);
        } else {
            String newName = JOptionPane.showInputDialog(
                    rootPane,
                    "Insert new name of root element:",
                    "Rename root element",
                    JOptionPane.QUESTION_MESSAGE);
        }
    }//GEN-LAST:event_rootElementRenameBtnActionPerformed

    private void itemElementRenameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemElementRenameBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemElementRenameBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XMLSplitUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new XMLSplitUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> basedOnDropdown;
    private javax.swing.JLabel basedOnLabel;
    private javax.swing.JLabel byValueLabel;
    private javax.swing.JTextField byValueTextField;
    private javax.swing.JTree docStructureTree;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel fileSummaryPanel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel infoTextLabel;
    private javax.swing.JLabel itemElementLabel;
    private javax.swing.JButton itemElementRenameBtn;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JLabel outPutLabel;
    private javax.swing.JTextField outPutPathTextField;
    private javax.swing.JLabel rootElementLabel;
    private javax.swing.JButton rootElementRenameBtn;
    private javax.swing.JButton selectItemBtn;
    private javax.swing.JButton selectRootBtn;
    private javax.swing.JLabel selectedItemElementLabel;
    private javax.swing.JLabel selectedRootElementLabel;
    private javax.swing.JButton setOutPutLocationBtn;
    private javax.swing.JLabel spliParamsLabel;
    private javax.swing.JButton splitButton;
    private javax.swing.JScrollPane structureScrollPanel;
    // End of variables declaration//GEN-END:variables

    private void showFileSummary() {
        infoTextLabel.setVisible(Boolean.FALSE);
        fileSummaryPanel.setVisible(Boolean.TRUE);
    }
}
